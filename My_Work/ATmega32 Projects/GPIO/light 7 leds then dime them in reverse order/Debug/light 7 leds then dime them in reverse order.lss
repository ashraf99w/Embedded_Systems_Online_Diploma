
light 7 leds then dime them in reverse order.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000354  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000003a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000003a8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000003d8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  00000414  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009c5  00000000  00000000  000004a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006b8  00000000  00000000  00000e69  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000583  00000000  00000000  00001521  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000fc  00000000  00000000  00001aa4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000051a  00000000  00000000  00001ba0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000527  00000000  00000000  000020ba  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  000025e1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e5       	ldi	r30, 0x54	; 84
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 36       	cpi	r26, 0x60	; 96
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 82 01 	call	0x304	; 0x304 <main>
  8a:	0c 94 a8 01 	jmp	0x350	; 0x350 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <LED_vInit>:
  92:	41 e0       	ldi	r20, 0x01	; 1
  94:	0e 94 58 00 	call	0xb0	; 0xb0 <DIO_vsetPINDir>
  98:	08 95       	ret

0000009a <LED_vTurnOn>:
  9a:	41 e0       	ldi	r20, 0x01	; 1
  9c:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_write>
  a0:	08 95       	ret

000000a2 <LED_vTurnOff>:
  a2:	40 e0       	ldi	r20, 0x00	; 0
  a4:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_write>
  a8:	08 95       	ret

000000aa <LED_vToggle>:
  aa:	0e 94 38 01 	call	0x270	; 0x270 <DIO_toggle>
  ae:	08 95       	ret

000000b0 <DIO_vsetPINDir>:
		break;
		default: 
		break;
	}
	return return_value ;
}
  b0:	82 34       	cpi	r24, 0x42	; 66
  b2:	19 f1       	breq	.+70     	; 0xfa <DIO_vsetPINDir+0x4a>
  b4:	18 f4       	brcc	.+6      	; 0xbc <DIO_vsetPINDir+0xc>
  b6:	81 34       	cpi	r24, 0x41	; 65
  b8:	39 f0       	breq	.+14     	; 0xc8 <DIO_vsetPINDir+0x18>
  ba:	08 95       	ret
  bc:	83 34       	cpi	r24, 0x43	; 67
  be:	b1 f1       	breq	.+108    	; 0x12c <DIO_vsetPINDir+0x7c>
  c0:	84 34       	cpi	r24, 0x44	; 68
  c2:	09 f4       	brne	.+2      	; 0xc6 <DIO_vsetPINDir+0x16>
  c4:	4c c0       	rjmp	.+152    	; 0x15e <DIO_vsetPINDir+0xae>
  c6:	08 95       	ret
  c8:	41 30       	cpi	r20, 0x01	; 1
  ca:	59 f4       	brne	.+22     	; 0xe2 <DIO_vsetPINDir+0x32>
  cc:	2a b3       	in	r18, 0x1a	; 26
  ce:	81 e0       	ldi	r24, 0x01	; 1
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	02 c0       	rjmp	.+4      	; 0xd8 <DIO_vsetPINDir+0x28>
  d4:	88 0f       	add	r24, r24
  d6:	99 1f       	adc	r25, r25
  d8:	6a 95       	dec	r22
  da:	e2 f7       	brpl	.-8      	; 0xd4 <DIO_vsetPINDir+0x24>
  dc:	82 2b       	or	r24, r18
  de:	8a bb       	out	0x1a, r24	; 26
  e0:	08 95       	ret
  e2:	2a b3       	in	r18, 0x1a	; 26
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	02 c0       	rjmp	.+4      	; 0xee <DIO_vsetPINDir+0x3e>
  ea:	88 0f       	add	r24, r24
  ec:	99 1f       	adc	r25, r25
  ee:	6a 95       	dec	r22
  f0:	e2 f7       	brpl	.-8      	; 0xea <DIO_vsetPINDir+0x3a>
  f2:	80 95       	com	r24
  f4:	82 23       	and	r24, r18
  f6:	8a bb       	out	0x1a, r24	; 26
  f8:	08 95       	ret
  fa:	41 30       	cpi	r20, 0x01	; 1
  fc:	59 f4       	brne	.+22     	; 0x114 <DIO_vsetPINDir+0x64>
  fe:	27 b3       	in	r18, 0x17	; 23
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	02 c0       	rjmp	.+4      	; 0x10a <DIO_vsetPINDir+0x5a>
 106:	88 0f       	add	r24, r24
 108:	99 1f       	adc	r25, r25
 10a:	6a 95       	dec	r22
 10c:	e2 f7       	brpl	.-8      	; 0x106 <DIO_vsetPINDir+0x56>
 10e:	82 2b       	or	r24, r18
 110:	87 bb       	out	0x17, r24	; 23
 112:	08 95       	ret
 114:	27 b3       	in	r18, 0x17	; 23
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	02 c0       	rjmp	.+4      	; 0x120 <DIO_vsetPINDir+0x70>
 11c:	88 0f       	add	r24, r24
 11e:	99 1f       	adc	r25, r25
 120:	6a 95       	dec	r22
 122:	e2 f7       	brpl	.-8      	; 0x11c <DIO_vsetPINDir+0x6c>
 124:	80 95       	com	r24
 126:	82 23       	and	r24, r18
 128:	87 bb       	out	0x17, r24	; 23
 12a:	08 95       	ret
 12c:	41 30       	cpi	r20, 0x01	; 1
 12e:	59 f4       	brne	.+22     	; 0x146 <DIO_vsetPINDir+0x96>
 130:	24 b3       	in	r18, 0x14	; 20
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	02 c0       	rjmp	.+4      	; 0x13c <DIO_vsetPINDir+0x8c>
 138:	88 0f       	add	r24, r24
 13a:	99 1f       	adc	r25, r25
 13c:	6a 95       	dec	r22
 13e:	e2 f7       	brpl	.-8      	; 0x138 <DIO_vsetPINDir+0x88>
 140:	82 2b       	or	r24, r18
 142:	84 bb       	out	0x14, r24	; 20
 144:	08 95       	ret
 146:	24 b3       	in	r18, 0x14	; 20
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	02 c0       	rjmp	.+4      	; 0x152 <DIO_vsetPINDir+0xa2>
 14e:	88 0f       	add	r24, r24
 150:	99 1f       	adc	r25, r25
 152:	6a 95       	dec	r22
 154:	e2 f7       	brpl	.-8      	; 0x14e <DIO_vsetPINDir+0x9e>
 156:	80 95       	com	r24
 158:	82 23       	and	r24, r18
 15a:	84 bb       	out	0x14, r24	; 20
 15c:	08 95       	ret
 15e:	41 30       	cpi	r20, 0x01	; 1
 160:	59 f4       	brne	.+22     	; 0x178 <DIO_vsetPINDir+0xc8>
 162:	21 b3       	in	r18, 0x11	; 17
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	02 c0       	rjmp	.+4      	; 0x16e <DIO_vsetPINDir+0xbe>
 16a:	88 0f       	add	r24, r24
 16c:	99 1f       	adc	r25, r25
 16e:	6a 95       	dec	r22
 170:	e2 f7       	brpl	.-8      	; 0x16a <DIO_vsetPINDir+0xba>
 172:	82 2b       	or	r24, r18
 174:	81 bb       	out	0x11, r24	; 17
 176:	08 95       	ret
 178:	21 b3       	in	r18, 0x11	; 17
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 c0       	rjmp	.+4      	; 0x184 <DIO_vsetPINDir+0xd4>
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	6a 95       	dec	r22
 186:	e2 f7       	brpl	.-8      	; 0x180 <DIO_vsetPINDir+0xd0>
 188:	80 95       	com	r24
 18a:	82 23       	and	r24, r18
 18c:	81 bb       	out	0x11, r24	; 17
 18e:	08 95       	ret

00000190 <DIO_write>:
 190:	82 34       	cpi	r24, 0x42	; 66
 192:	19 f1       	breq	.+70     	; 0x1da <DIO_write+0x4a>
 194:	18 f4       	brcc	.+6      	; 0x19c <DIO_write+0xc>
 196:	81 34       	cpi	r24, 0x41	; 65
 198:	39 f0       	breq	.+14     	; 0x1a8 <DIO_write+0x18>
 19a:	08 95       	ret
 19c:	83 34       	cpi	r24, 0x43	; 67
 19e:	b1 f1       	breq	.+108    	; 0x20c <DIO_write+0x7c>
 1a0:	84 34       	cpi	r24, 0x44	; 68
 1a2:	09 f4       	brne	.+2      	; 0x1a6 <DIO_write+0x16>
 1a4:	4c c0       	rjmp	.+152    	; 0x23e <DIO_write+0xae>
 1a6:	08 95       	ret
 1a8:	41 30       	cpi	r20, 0x01	; 1
 1aa:	59 f4       	brne	.+22     	; 0x1c2 <DIO_write+0x32>
 1ac:	2b b3       	in	r18, 0x1b	; 27
 1ae:	81 e0       	ldi	r24, 0x01	; 1
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	02 c0       	rjmp	.+4      	; 0x1b8 <DIO_write+0x28>
 1b4:	88 0f       	add	r24, r24
 1b6:	99 1f       	adc	r25, r25
 1b8:	6a 95       	dec	r22
 1ba:	e2 f7       	brpl	.-8      	; 0x1b4 <DIO_write+0x24>
 1bc:	82 2b       	or	r24, r18
 1be:	8b bb       	out	0x1b, r24	; 27
 1c0:	08 95       	ret
 1c2:	2b b3       	in	r18, 0x1b	; 27
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	02 c0       	rjmp	.+4      	; 0x1ce <DIO_write+0x3e>
 1ca:	88 0f       	add	r24, r24
 1cc:	99 1f       	adc	r25, r25
 1ce:	6a 95       	dec	r22
 1d0:	e2 f7       	brpl	.-8      	; 0x1ca <DIO_write+0x3a>
 1d2:	80 95       	com	r24
 1d4:	82 23       	and	r24, r18
 1d6:	8b bb       	out	0x1b, r24	; 27
 1d8:	08 95       	ret
 1da:	41 30       	cpi	r20, 0x01	; 1
 1dc:	59 f4       	brne	.+22     	; 0x1f4 <DIO_write+0x64>
 1de:	28 b3       	in	r18, 0x18	; 24
 1e0:	81 e0       	ldi	r24, 0x01	; 1
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	02 c0       	rjmp	.+4      	; 0x1ea <DIO_write+0x5a>
 1e6:	88 0f       	add	r24, r24
 1e8:	99 1f       	adc	r25, r25
 1ea:	6a 95       	dec	r22
 1ec:	e2 f7       	brpl	.-8      	; 0x1e6 <DIO_write+0x56>
 1ee:	82 2b       	or	r24, r18
 1f0:	88 bb       	out	0x18, r24	; 24
 1f2:	08 95       	ret
 1f4:	28 b3       	in	r18, 0x18	; 24
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	02 c0       	rjmp	.+4      	; 0x200 <DIO_write+0x70>
 1fc:	88 0f       	add	r24, r24
 1fe:	99 1f       	adc	r25, r25
 200:	6a 95       	dec	r22
 202:	e2 f7       	brpl	.-8      	; 0x1fc <DIO_write+0x6c>
 204:	80 95       	com	r24
 206:	82 23       	and	r24, r18
 208:	88 bb       	out	0x18, r24	; 24
 20a:	08 95       	ret
 20c:	41 30       	cpi	r20, 0x01	; 1
 20e:	59 f4       	brne	.+22     	; 0x226 <DIO_write+0x96>
 210:	25 b3       	in	r18, 0x15	; 21
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	02 c0       	rjmp	.+4      	; 0x21c <DIO_write+0x8c>
 218:	88 0f       	add	r24, r24
 21a:	99 1f       	adc	r25, r25
 21c:	6a 95       	dec	r22
 21e:	e2 f7       	brpl	.-8      	; 0x218 <DIO_write+0x88>
 220:	82 2b       	or	r24, r18
 222:	85 bb       	out	0x15, r24	; 21
 224:	08 95       	ret
 226:	25 b3       	in	r18, 0x15	; 21
 228:	81 e0       	ldi	r24, 0x01	; 1
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	02 c0       	rjmp	.+4      	; 0x232 <DIO_write+0xa2>
 22e:	88 0f       	add	r24, r24
 230:	99 1f       	adc	r25, r25
 232:	6a 95       	dec	r22
 234:	e2 f7       	brpl	.-8      	; 0x22e <DIO_write+0x9e>
 236:	80 95       	com	r24
 238:	82 23       	and	r24, r18
 23a:	85 bb       	out	0x15, r24	; 21
 23c:	08 95       	ret
 23e:	41 30       	cpi	r20, 0x01	; 1
 240:	59 f4       	brne	.+22     	; 0x258 <DIO_write+0xc8>
 242:	22 b3       	in	r18, 0x12	; 18
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	02 c0       	rjmp	.+4      	; 0x24e <DIO_write+0xbe>
 24a:	88 0f       	add	r24, r24
 24c:	99 1f       	adc	r25, r25
 24e:	6a 95       	dec	r22
 250:	e2 f7       	brpl	.-8      	; 0x24a <DIO_write+0xba>
 252:	82 2b       	or	r24, r18
 254:	82 bb       	out	0x12, r24	; 18
 256:	08 95       	ret
 258:	22 b3       	in	r18, 0x12	; 18
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	02 c0       	rjmp	.+4      	; 0x264 <DIO_write+0xd4>
 260:	88 0f       	add	r24, r24
 262:	99 1f       	adc	r25, r25
 264:	6a 95       	dec	r22
 266:	e2 f7       	brpl	.-8      	; 0x260 <DIO_write+0xd0>
 268:	80 95       	com	r24
 26a:	82 23       	and	r24, r18
 26c:	82 bb       	out	0x12, r24	; 18
 26e:	08 95       	ret

00000270 <DIO_toggle>:
void DIO_toggle(unsigned char portname,unsigned char pinnumber)
{
	switch(portname)
 270:	82 34       	cpi	r24, 0x42	; 66
 272:	a1 f0       	breq	.+40     	; 0x29c <DIO_toggle+0x2c>
 274:	18 f4       	brcc	.+6      	; 0x27c <DIO_toggle+0xc>
 276:	81 34       	cpi	r24, 0x41	; 65
 278:	31 f0       	breq	.+12     	; 0x286 <DIO_toggle+0x16>
 27a:	08 95       	ret
 27c:	83 34       	cpi	r24, 0x43	; 67
 27e:	c9 f0       	breq	.+50     	; 0x2b2 <DIO_toggle+0x42>
 280:	84 34       	cpi	r24, 0x44	; 68
 282:	11 f1       	breq	.+68     	; 0x2c8 <DIO_toggle+0x58>
 284:	08 95       	ret
	{
		case 'A':
		TOG_BIT(PORTA,pinnumber);//Toggle the value of the given pin in port A
 286:	2b b3       	in	r18, 0x1b	; 27
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	02 c0       	rjmp	.+4      	; 0x292 <DIO_toggle+0x22>
 28e:	88 0f       	add	r24, r24
 290:	99 1f       	adc	r25, r25
 292:	6a 95       	dec	r22
 294:	e2 f7       	brpl	.-8      	; 0x28e <DIO_toggle+0x1e>
 296:	82 27       	eor	r24, r18
 298:	8b bb       	out	0x1b, r24	; 27
		break;
 29a:	08 95       	ret
		case 'B':
		TOG_BIT(PORTB,pinnumber);//Toggle the value of the given pin in port B
 29c:	28 b3       	in	r18, 0x18	; 24
 29e:	81 e0       	ldi	r24, 0x01	; 1
 2a0:	90 e0       	ldi	r25, 0x00	; 0
 2a2:	02 c0       	rjmp	.+4      	; 0x2a8 <DIO_toggle+0x38>
 2a4:	88 0f       	add	r24, r24
 2a6:	99 1f       	adc	r25, r25
 2a8:	6a 95       	dec	r22
 2aa:	e2 f7       	brpl	.-8      	; 0x2a4 <DIO_toggle+0x34>
 2ac:	82 27       	eor	r24, r18
 2ae:	88 bb       	out	0x18, r24	; 24
		break;
 2b0:	08 95       	ret
		case 'C':
		TOG_BIT(PORTC,pinnumber);//Toggle the value of the given pin in port C
 2b2:	25 b3       	in	r18, 0x15	; 21
 2b4:	81 e0       	ldi	r24, 0x01	; 1
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	02 c0       	rjmp	.+4      	; 0x2be <DIO_toggle+0x4e>
 2ba:	88 0f       	add	r24, r24
 2bc:	99 1f       	adc	r25, r25
 2be:	6a 95       	dec	r22
 2c0:	e2 f7       	brpl	.-8      	; 0x2ba <DIO_toggle+0x4a>
 2c2:	82 27       	eor	r24, r18
 2c4:	85 bb       	out	0x15, r24	; 21
		break;
 2c6:	08 95       	ret
		case 'D':
		TOG_BIT(PORTD,pinnumber);//Toggle the value of the given pin in port D
 2c8:	22 b3       	in	r18, 0x12	; 18
 2ca:	81 e0       	ldi	r24, 0x01	; 1
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	02 c0       	rjmp	.+4      	; 0x2d4 <DIO_toggle+0x64>
 2d0:	88 0f       	add	r24, r24
 2d2:	99 1f       	adc	r25, r25
 2d4:	6a 95       	dec	r22
 2d6:	e2 f7       	brpl	.-8      	; 0x2d0 <DIO_toggle+0x60>
 2d8:	82 27       	eor	r24, r18
 2da:	82 bb       	out	0x12, r24	; 18
 2dc:	08 95       	ret

000002de <DIO_set_port_direction>:
		default: break;
	}
}
void DIO_set_port_direction(unsigned char portname,unsigned char direction)
{
	switch(portname)
 2de:	82 34       	cpi	r24, 0x42	; 66
 2e0:	59 f0       	breq	.+22     	; 0x2f8 <DIO_set_port_direction+0x1a>
 2e2:	18 f4       	brcc	.+6      	; 0x2ea <DIO_set_port_direction+0xc>
 2e4:	81 34       	cpi	r24, 0x41	; 65
 2e6:	31 f0       	breq	.+12     	; 0x2f4 <DIO_set_port_direction+0x16>
 2e8:	08 95       	ret
 2ea:	83 34       	cpi	r24, 0x43	; 67
 2ec:	39 f0       	breq	.+14     	; 0x2fc <DIO_set_port_direction+0x1e>
 2ee:	84 34       	cpi	r24, 0x44	; 68
 2f0:	39 f0       	breq	.+14     	; 0x300 <DIO_set_port_direction+0x22>
 2f2:	08 95       	ret
	{
		case 'A' :
		DDRA=direction; //set the direction of port A
 2f4:	6a bb       	out	0x1a, r22	; 26
		break ;
 2f6:	08 95       	ret
		case 'B':
		DDRB=direction; //set the direction of port B
 2f8:	67 bb       	out	0x17, r22	; 23
		break ;
 2fa:	08 95       	ret
		case 'C' :
		DDRC=direction; //set the direction of port C
 2fc:	64 bb       	out	0x14, r22	; 20
		break ;
 2fe:	08 95       	ret
		case 'D':
		DDRD=direction; //set the direction of port D
 300:	61 bb       	out	0x11, r22	; 17
 302:	08 95       	ret

00000304 <main>:
#include <util/delay.h>
#include "LED.h"
#include "DIO.h"
int main(void)
{
	DIO_set_port_direction('D',0xFF);//Set Port D As Output
 304:	6f ef       	ldi	r22, 0xFF	; 255
 306:	84 e4       	ldi	r24, 0x44	; 68
 308:	0e 94 6f 01 	call	0x2de	; 0x2de <DIO_set_port_direction>
	signed  char i;
    while(1)
    {
      for (i=0;i<=7;i++)
 30c:	c0 e0       	ldi	r28, 0x00	; 0
      {
		  LED_vTurnOn('D',i);
 30e:	6c 2f       	mov	r22, r28
 310:	84 e4       	ldi	r24, 0x44	; 68
 312:	0e 94 4d 00 	call	0x9a	; 0x9a <LED_vTurnOn>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 316:	2f ef       	ldi	r18, 0xFF	; 255
 318:	89 e6       	ldi	r24, 0x69	; 105
 31a:	98 e1       	ldi	r25, 0x18	; 24
 31c:	21 50       	subi	r18, 0x01	; 1
 31e:	80 40       	sbci	r24, 0x00	; 0
 320:	90 40       	sbci	r25, 0x00	; 0
 322:	e1 f7       	brne	.-8      	; 0x31c <main+0x18>
 324:	00 c0       	rjmp	.+0      	; 0x326 <main+0x22>
 326:	00 00       	nop
 328:	cf 5f       	subi	r28, 0xFF	; 255
{
	DIO_set_port_direction('D',0xFF);//Set Port D As Output
	signed  char i;
    while(1)
    {
      for (i=0;i<=7;i++)
 32a:	c8 30       	cpi	r28, 0x08	; 8
 32c:	81 f7       	brne	.-32     	; 0x30e <main+0xa>
 32e:	c7 e0       	ldi	r28, 0x07	; 7
		  LED_vTurnOn('D',i);
		  _delay_ms(1000);
      }
	  for (i=7;i>=0;i--)
	  {
		  LED_vTurnOff('D',i);
 330:	6c 2f       	mov	r22, r28
 332:	84 e4       	ldi	r24, 0x44	; 68
 334:	0e 94 51 00 	call	0xa2	; 0xa2 <LED_vTurnOff>
 338:	2f ef       	ldi	r18, 0xFF	; 255
 33a:	89 e6       	ldi	r24, 0x69	; 105
 33c:	98 e1       	ldi	r25, 0x18	; 24
 33e:	21 50       	subi	r18, 0x01	; 1
 340:	80 40       	sbci	r24, 0x00	; 0
 342:	90 40       	sbci	r25, 0x00	; 0
 344:	e1 f7       	brne	.-8      	; 0x33e <main+0x3a>
 346:	00 c0       	rjmp	.+0      	; 0x348 <main+0x44>
 348:	00 00       	nop
 34a:	c1 50       	subi	r28, 0x01	; 1
 34c:	88 f7       	brcc	.-30     	; 0x330 <main+0x2c>
 34e:	de cf       	rjmp	.-68     	; 0x30c <main+0x8>

00000350 <_exit>:
 350:	f8 94       	cli

00000352 <__stop_program>:
 352:	ff cf       	rjmp	.-2      	; 0x352 <__stop_program>
