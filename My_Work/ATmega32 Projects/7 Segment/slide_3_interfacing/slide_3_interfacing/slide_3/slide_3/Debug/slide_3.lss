
slide_3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002b6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000030a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000030a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000033c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000d8  00000000  00000000  00000378  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c55  00000000  00000000  00000450  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000076d  00000000  00000000  000010a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000076e  00000000  00000000  00001812  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000017c  00000000  00000000  00001f80  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000058e  00000000  00000000  000020fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000982  00000000  00000000  0000268a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a8  00000000  00000000  0000300c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
   8:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
   c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  10:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  14:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  18:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  1c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  20:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  24:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  28:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  2c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  30:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  34:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  38:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  3c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  40:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  44:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  48:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  4c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  50:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
  54:	95 00       	.word	0x0095	; ????
  56:	ae 00       	.word	0x00ae	; ????
  58:	c7 00       	.word	0x00c7	; ????
  5a:	e0 00       	.word	0x00e0	; ????
  5c:	f8 00       	.word	0x00f8	; ????
  5e:	f8 00       	.word	0x00f8	; ????
  60:	f8 00       	.word	0x00f8	; ????
  62:	f8 00       	.word	0x00f8	; ????
  64:	f8 00       	.word	0x00f8	; ????
  66:	f8 00       	.word	0x00f8	; ????
  68:	f8 00       	.word	0x00f8	; ????
  6a:	f8 00       	.word	0x00f8	; ????
  6c:	f8 00       	.word	0x00f8	; ????
  6e:	f8 00       	.word	0x00f8	; ????
  70:	f8 00       	.word	0x00f8	; ????
  72:	f8 00       	.word	0x00f8	; ????
  74:	f8 00       	.word	0x00f8	; ????
  76:	f8 00       	.word	0x00f8	; ????
  78:	f8 00       	.word	0x00f8	; ????
  7a:	f8 00       	.word	0x00f8	; ????
  7c:	f8 00       	.word	0x00f8	; ????
  7e:	f8 00       	.word	0x00f8	; ????
  80:	f8 00       	.word	0x00f8	; ????
  82:	f8 00       	.word	0x00f8	; ????
  84:	f8 00       	.word	0x00f8	; ????
  86:	f8 00       	.word	0x00f8	; ????
  88:	f8 00       	.word	0x00f8	; ????
  8a:	f8 00       	.word	0x00f8	; ????
  8c:	f8 00       	.word	0x00f8	; ????
  8e:	f8 00       	.word	0x00f8	; ????
  90:	f8 00       	.word	0x00f8	; ????
  92:	f8 00       	.word	0x00f8	; ????
  94:	95 00       	.word	0x0095	; ????
  96:	ae 00       	.word	0x00ae	; ????
  98:	c7 00       	.word	0x00c7	; ????
  9a:	e0 00       	.word	0x00e0	; ????
  9c:	05 01       	movw	r0, r10
  9e:	0c 01       	movw	r0, r24
  a0:	13 01       	movw	r2, r6
  a2:	1a 01       	movw	r2, r20
  a4:	20 01       	movw	r4, r0
  a6:	20 01       	movw	r4, r0
  a8:	20 01       	movw	r4, r0
  aa:	20 01       	movw	r4, r0
  ac:	20 01       	movw	r4, r0
  ae:	20 01       	movw	r4, r0
  b0:	20 01       	movw	r4, r0
  b2:	20 01       	movw	r4, r0
  b4:	20 01       	movw	r4, r0
  b6:	20 01       	movw	r4, r0
  b8:	20 01       	movw	r4, r0
  ba:	20 01       	movw	r4, r0
  bc:	20 01       	movw	r4, r0
  be:	20 01       	movw	r4, r0
  c0:	20 01       	movw	r4, r0
  c2:	20 01       	movw	r4, r0
  c4:	20 01       	movw	r4, r0
  c6:	20 01       	movw	r4, r0
  c8:	20 01       	movw	r4, r0
  ca:	20 01       	movw	r4, r0
  cc:	20 01       	movw	r4, r0
  ce:	20 01       	movw	r4, r0
  d0:	20 01       	movw	r4, r0
  d2:	20 01       	movw	r4, r0
  d4:	20 01       	movw	r4, r0
  d6:	20 01       	movw	r4, r0
  d8:	20 01       	movw	r4, r0
  da:	20 01       	movw	r4, r0
  dc:	05 01       	movw	r0, r10
  de:	0c 01       	movw	r0, r24
  e0:	13 01       	movw	r2, r6
  e2:	1a 01       	movw	r2, r20

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf e5       	ldi	r28, 0x5F	; 95
  ea:	d8 e0       	ldi	r29, 0x08	; 8
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61

000000f0 <__do_copy_data>:
  f0:	10 e0       	ldi	r17, 0x00	; 0
  f2:	a0 e6       	ldi	r26, 0x60	; 96
  f4:	b0 e0       	ldi	r27, 0x00	; 0
  f6:	e6 eb       	ldi	r30, 0xB6	; 182
  f8:	f2 e0       	ldi	r31, 0x02	; 2
  fa:	02 c0       	rjmp	.+4      	; 0x100 <__do_copy_data+0x10>
  fc:	05 90       	lpm	r0, Z+
  fe:	0d 92       	st	X+, r0
 100:	a0 36       	cpi	r26, 0x60	; 96
 102:	b1 07       	cpc	r27, r17
 104:	d9 f7       	brne	.-10     	; 0xfc <__do_copy_data+0xc>
 106:	0e 94 21 01 	call	0x242	; 0x242 <main>
 10a:	0c 94 59 01 	jmp	0x2b2	; 0x2b2 <_exit>

0000010e <__bad_interrupt>:
 10e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000112 <Dio_vSetPinDir>:
		{
			Set_bit(PORTD,pin);
		}
		else
		{
			Clear_bit(PORTD,pin);
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	fc 01       	movw	r30, r24
 116:	e1 54       	subi	r30, 0x41	; 65
 118:	f1 09       	sbc	r31, r1
 11a:	e4 32       	cpi	r30, 0x24	; 36
 11c:	f1 05       	cpc	r31, r1
 11e:	08 f0       	brcs	.+2      	; 0x122 <Dio_vSetPinDir+0x10>
 120:	67 c0       	rjmp	.+206    	; 0x1f0 <Dio_vSetPinDir+0xde>
 122:	e6 5d       	subi	r30, 0xD6	; 214
 124:	ff 4f       	sbci	r31, 0xFF	; 255
 126:	0c 94 53 01 	jmp	0x2a6	; 0x2a6 <__tablejump2__>
 12a:	41 30       	cpi	r20, 0x01	; 1
 12c:	59 f4       	brne	.+22     	; 0x144 <Dio_vSetPinDir+0x32>
 12e:	2a b3       	in	r18, 0x1a	; 26
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	02 c0       	rjmp	.+4      	; 0x13a <Dio_vSetPinDir+0x28>
 136:	88 0f       	add	r24, r24
 138:	99 1f       	adc	r25, r25
 13a:	6a 95       	dec	r22
 13c:	e2 f7       	brpl	.-8      	; 0x136 <Dio_vSetPinDir+0x24>
 13e:	82 2b       	or	r24, r18
 140:	8a bb       	out	0x1a, r24	; 26
 142:	08 95       	ret
 144:	2a b3       	in	r18, 0x1a	; 26
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	02 c0       	rjmp	.+4      	; 0x150 <Dio_vSetPinDir+0x3e>
 14c:	88 0f       	add	r24, r24
 14e:	99 1f       	adc	r25, r25
 150:	6a 95       	dec	r22
 152:	e2 f7       	brpl	.-8      	; 0x14c <Dio_vSetPinDir+0x3a>
 154:	80 95       	com	r24
 156:	82 23       	and	r24, r18
 158:	8a bb       	out	0x1a, r24	; 26
 15a:	08 95       	ret
 15c:	41 30       	cpi	r20, 0x01	; 1
 15e:	59 f4       	brne	.+22     	; 0x176 <Dio_vSetPinDir+0x64>
 160:	27 b3       	in	r18, 0x17	; 23
 162:	81 e0       	ldi	r24, 0x01	; 1
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	02 c0       	rjmp	.+4      	; 0x16c <Dio_vSetPinDir+0x5a>
 168:	88 0f       	add	r24, r24
 16a:	99 1f       	adc	r25, r25
 16c:	6a 95       	dec	r22
 16e:	e2 f7       	brpl	.-8      	; 0x168 <Dio_vSetPinDir+0x56>
 170:	82 2b       	or	r24, r18
 172:	87 bb       	out	0x17, r24	; 23
 174:	08 95       	ret
 176:	27 b3       	in	r18, 0x17	; 23
 178:	81 e0       	ldi	r24, 0x01	; 1
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	02 c0       	rjmp	.+4      	; 0x182 <Dio_vSetPinDir+0x70>
 17e:	88 0f       	add	r24, r24
 180:	99 1f       	adc	r25, r25
 182:	6a 95       	dec	r22
 184:	e2 f7       	brpl	.-8      	; 0x17e <Dio_vSetPinDir+0x6c>
 186:	80 95       	com	r24
 188:	82 23       	and	r24, r18
 18a:	87 bb       	out	0x17, r24	; 23
 18c:	08 95       	ret
 18e:	41 30       	cpi	r20, 0x01	; 1
 190:	59 f4       	brne	.+22     	; 0x1a8 <Dio_vSetPinDir+0x96>
 192:	24 b3       	in	r18, 0x14	; 20
 194:	81 e0       	ldi	r24, 0x01	; 1
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	02 c0       	rjmp	.+4      	; 0x19e <Dio_vSetPinDir+0x8c>
 19a:	88 0f       	add	r24, r24
 19c:	99 1f       	adc	r25, r25
 19e:	6a 95       	dec	r22
 1a0:	e2 f7       	brpl	.-8      	; 0x19a <Dio_vSetPinDir+0x88>
 1a2:	82 2b       	or	r24, r18
 1a4:	84 bb       	out	0x14, r24	; 20
 1a6:	08 95       	ret
 1a8:	24 b3       	in	r18, 0x14	; 20
 1aa:	81 e0       	ldi	r24, 0x01	; 1
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	02 c0       	rjmp	.+4      	; 0x1b4 <Dio_vSetPinDir+0xa2>
 1b0:	88 0f       	add	r24, r24
 1b2:	99 1f       	adc	r25, r25
 1b4:	6a 95       	dec	r22
 1b6:	e2 f7       	brpl	.-8      	; 0x1b0 <Dio_vSetPinDir+0x9e>
 1b8:	80 95       	com	r24
 1ba:	82 23       	and	r24, r18
 1bc:	84 bb       	out	0x14, r24	; 20
 1be:	08 95       	ret
 1c0:	41 30       	cpi	r20, 0x01	; 1
 1c2:	59 f4       	brne	.+22     	; 0x1da <Dio_vSetPinDir+0xc8>
 1c4:	21 b3       	in	r18, 0x11	; 17
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	02 c0       	rjmp	.+4      	; 0x1d0 <Dio_vSetPinDir+0xbe>
 1cc:	88 0f       	add	r24, r24
 1ce:	99 1f       	adc	r25, r25
 1d0:	6a 95       	dec	r22
 1d2:	e2 f7       	brpl	.-8      	; 0x1cc <Dio_vSetPinDir+0xba>
 1d4:	82 2b       	or	r24, r18
 1d6:	81 bb       	out	0x11, r24	; 17
 1d8:	08 95       	ret
 1da:	21 b3       	in	r18, 0x11	; 17
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	90 e0       	ldi	r25, 0x00	; 0
 1e0:	02 c0       	rjmp	.+4      	; 0x1e6 <Dio_vSetPinDir+0xd4>
 1e2:	88 0f       	add	r24, r24
 1e4:	99 1f       	adc	r25, r25
 1e6:	6a 95       	dec	r22
 1e8:	e2 f7       	brpl	.-8      	; 0x1e2 <Dio_vSetPinDir+0xd0>
 1ea:	80 95       	com	r24
 1ec:	82 23       	and	r24, r18
 1ee:	81 bb       	out	0x11, r24	; 17
 1f0:	08 95       	ret

000001f2 <write_low_nibble>:
	
	
	void write_low_nibble(unsigned char portname,unsigned char value)
	{
		
		value &=0x0f;
 1f2:	6f 70       	andi	r22, 0x0F	; 15
		switch(portname)
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	fc 01       	movw	r30, r24
 1f8:	e1 54       	subi	r30, 0x41	; 65
 1fa:	f1 09       	sbc	r31, r1
 1fc:	e4 32       	cpi	r30, 0x24	; 36
 1fe:	f1 05       	cpc	r31, r1
 200:	f8 f4       	brcc	.+62     	; 0x240 <write_low_nibble+0x4e>
 202:	e2 5b       	subi	r30, 0xB2	; 178
 204:	ff 4f       	sbci	r31, 0xFF	; 255
 206:	0c 94 53 01 	jmp	0x2a6	; 0x2a6 <__tablejump2__>
		{
			case 'a':
			case 'A':
			PORTA &=0xf0;
 20a:	8b b3       	in	r24, 0x1b	; 27
 20c:	80 7f       	andi	r24, 0xF0	; 240
 20e:	8b bb       	out	0x1b, r24	; 27
			PORTA |=value;
 210:	8b b3       	in	r24, 0x1b	; 27
 212:	68 2b       	or	r22, r24
 214:	6b bb       	out	0x1b, r22	; 27
			break;
 216:	08 95       	ret
			
			case 'b':
			case 'B':
			PORTB &=0xf0;
 218:	88 b3       	in	r24, 0x18	; 24
 21a:	80 7f       	andi	r24, 0xF0	; 240
 21c:	88 bb       	out	0x18, r24	; 24
			PORTB |=value;
 21e:	88 b3       	in	r24, 0x18	; 24
 220:	68 2b       	or	r22, r24
 222:	68 bb       	out	0x18, r22	; 24
			break;
 224:	08 95       	ret
			
			case 'c':
			case 'C':
			PORTC &=0xf0;
 226:	85 b3       	in	r24, 0x15	; 21
 228:	80 7f       	andi	r24, 0xF0	; 240
 22a:	85 bb       	out	0x15, r24	; 21
			PORTC |=value;
 22c:	85 b3       	in	r24, 0x15	; 21
 22e:	68 2b       	or	r22, r24
 230:	65 bb       	out	0x15, r22	; 21
			break;
 232:	08 95       	ret
			
			case 'd':
			case 'D':
			PORTD &=0xf0;
 234:	82 b3       	in	r24, 0x12	; 18
 236:	80 7f       	andi	r24, 0xF0	; 240
 238:	82 bb       	out	0x12, r24	; 18
			PORTD |=value;
 23a:	82 b3       	in	r24, 0x12	; 18
 23c:	68 2b       	or	r22, r24
 23e:	62 bb       	out	0x12, r22	; 18
 240:	08 95       	ret

00000242 <main>:
	 
	 #endif
	 
	 #ifdef  fourth_code
	 
		 Seven_Seg_vinit_BCD_LowNibble('c');
 242:	83 e6       	ldi	r24, 0x63	; 99
 244:	0e 94 39 01 	call	0x272	; 0x272 <Seven_Seg_vinit_BCD_LowNibble>
		 
		 #endif
		 
		 #ifdef  fourth_code
		 
			for(counter=0;counter<10;counter++)
 248:	c0 e0       	ldi	r28, 0x00	; 0
 24a:	d0 e0       	ldi	r29, 0x00	; 0
 24c:	0e c0       	rjmp	.+28     	; 0x26a <main+0x28>
			{
				
				Seven_Seg_vWrite_BCD_LowNibble('c',counter);
 24e:	6c 2f       	mov	r22, r28
 250:	83 e6       	ldi	r24, 0x63	; 99
 252:	0e 94 50 01 	call	0x2a0	; 0x2a0 <Seven_Seg_vWrite_BCD_LowNibble>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 256:	2f ef       	ldi	r18, 0xFF	; 255
 258:	85 ea       	ldi	r24, 0xA5	; 165
 25a:	9e e0       	ldi	r25, 0x0E	; 14
 25c:	21 50       	subi	r18, 0x01	; 1
 25e:	80 40       	sbci	r24, 0x00	; 0
 260:	90 40       	sbci	r25, 0x00	; 0
 262:	e1 f7       	brne	.-8      	; 0x25c <main+0x1a>
 264:	00 c0       	rjmp	.+0      	; 0x266 <main+0x24>
 266:	00 00       	nop
		 
		 #endif
		 
		 #ifdef  fourth_code
		 
			for(counter=0;counter<10;counter++)
 268:	21 96       	adiw	r28, 0x01	; 1
 26a:	ca 30       	cpi	r28, 0x0A	; 10
 26c:	d1 05       	cpc	r29, r1
 26e:	78 f3       	brcs	.-34     	; 0x24e <main+0xc>
 270:	eb cf       	rjmp	.-42     	; 0x248 <main+0x6>

00000272 <Seven_Seg_vinit_BCD_LowNibble>:
 272:	cf 93       	push	r28
 274:	c8 2f       	mov	r28, r24
 276:	41 e0       	ldi	r20, 0x01	; 1
 278:	60 e0       	ldi	r22, 0x00	; 0
 27a:	0e 94 89 00 	call	0x112	; 0x112 <Dio_vSetPinDir>
 27e:	41 e0       	ldi	r20, 0x01	; 1
 280:	61 e0       	ldi	r22, 0x01	; 1
 282:	8c 2f       	mov	r24, r28
 284:	0e 94 89 00 	call	0x112	; 0x112 <Dio_vSetPinDir>
 288:	41 e0       	ldi	r20, 0x01	; 1
 28a:	62 e0       	ldi	r22, 0x02	; 2
 28c:	8c 2f       	mov	r24, r28
 28e:	0e 94 89 00 	call	0x112	; 0x112 <Dio_vSetPinDir>
 292:	41 e0       	ldi	r20, 0x01	; 1
 294:	63 e0       	ldi	r22, 0x03	; 3
 296:	8c 2f       	mov	r24, r28
 298:	0e 94 89 00 	call	0x112	; 0x112 <Dio_vSetPinDir>
 29c:	cf 91       	pop	r28
 29e:	08 95       	ret

000002a0 <Seven_Seg_vWrite_BCD_LowNibble>:
 2a0:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <write_low_nibble>
 2a4:	08 95       	ret

000002a6 <__tablejump2__>:
 2a6:	ee 0f       	add	r30, r30
 2a8:	ff 1f       	adc	r31, r31
 2aa:	05 90       	lpm	r0, Z+
 2ac:	f4 91       	lpm	r31, Z
 2ae:	e0 2d       	mov	r30, r0
 2b0:	09 94       	ijmp

000002b2 <_exit>:
 2b2:	f8 94       	cli

000002b4 <__stop_program>:
 2b4:	ff cf       	rjmp	.-2      	; 0x2b4 <__stop_program>
